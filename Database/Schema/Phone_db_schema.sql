-- MySQL Script generated by MySQL Workbench
-- Sun Jan  3 12:56:03 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema phone_db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema phone_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `phone_db` DEFAULT CHARACTER SET utf8 ;
USE `phone_db` ;

-- -----------------------------------------------------
-- Table `phone_db`.`brand`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `phone_db`.`brand` ;

CREATE TABLE IF NOT EXISTS `phone_db`.`brand` (
  `idBrand` INT NOT NULL,
  `name` VARCHAR(150) NULL DEFAULT NULL,
  PRIMARY KEY (`idBrand`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `phone_db`.`product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `phone_db`.`product` ;

CREATE TABLE IF NOT EXISTS `phone_db`.`product` (
  `id_products` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(250) NULL DEFAULT NULL,
  `rating` FLOAT NULL DEFAULT NULL,
  `price` FLOAT NULL DEFAULT NULL,
  `stock` INT UNSIGNED NULL DEFAULT NULL,
  `img_url` VARCHAR(250) NULL DEFAULT NULL,
  `product_asin` VARCHAR(45) NULL DEFAULT NULL,
  `Brand_idBrand` INT NOT NULL,
  PRIMARY KEY (`id_products`),
  INDEX `fk_Product_Brand3` (`Brand_idBrand` ASC) VISIBLE,
  CONSTRAINT `fk_Product_Brand3`
    FOREIGN KEY (`Brand_idBrand`)
    REFERENCES `phone_db`.`brand` (`idBrand`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `phone_db`.`reveiwer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `phone_db`.`reveiwer` ;

CREATE TABLE IF NOT EXISTS `phone_db`.`reveiwer` (
  `id_reveiwer` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(250) NULL DEFAULT NULL,
  PRIMARY KEY (`id_reveiwer`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `phone_db`.`comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `phone_db`.`comment` ;

CREATE TABLE IF NOT EXISTS `phone_db`.`comment` (
  `id_comment` INT NOT NULL AUTO_INCREMENT,
  `body` TEXT NULL DEFAULT NULL,
  `created` DATE NULL DEFAULT NULL,
  `title` VARCHAR(250) NULL DEFAULT NULL,
  `rating` INT NULL DEFAULT NULL,
  `product_id` INT NOT NULL,
  `reviewer_id` INT NOT NULL,
  PRIMARY KEY (`id_comment`),
  INDEX `fk_Comment_Product1_idx` (`product_id` ASC) VISIBLE,
  INDEX `fk_Comment_Reveiwer1_idx` (`reviewer_id` ASC) VISIBLE,
  CONSTRAINT `fk_Comment_Product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `phone_db`.`product` (`id_products`),
  CONSTRAINT `fk_Comment_Reveiwer1`
    FOREIGN KEY (`reviewer_id`)
    REFERENCES `phone_db`.`reveiwer` (`id_reveiwer`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `phone_db`.`customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `phone_db`.`customer` ;

CREATE TABLE IF NOT EXISTS `phone_db`.`customer` (
  `id_customer` INT NOT NULL AUTO_INCREMENT,
  `firstname` VARCHAR(45) NULL DEFAULT NULL,
  `lastname` VARCHAR(45) NULL DEFAULT NULL,
  `address` VARCHAR(45) NULL DEFAULT NULL,
  `state` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
  `postal_code` VARCHAR(15) NULL DEFAULT NULL,
  `email` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_customer`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `phone_db`.`order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `phone_db`.`order` ;

CREATE TABLE IF NOT EXISTS `phone_db`.`order` (
  `order_number` INT NOT NULL AUTO_INCREMENT,
  `order_date` DATE NULL DEFAULT NULL,
  `Customer_id_customer` INT NOT NULL,
  `order_total` FLOAT NULL DEFAULT NULL,
  PRIMARY KEY (`order_number`),
  INDEX `fk_Order_Customer2` (`Customer_id_customer` ASC) VISIBLE,
  CONSTRAINT `fk_Order_Customer2`
    FOREIGN KEY (`Customer_id_customer`)
    REFERENCES `phone_db`.`customer` (`id_customer`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `phone_db`.`product_order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `phone_db`.`product_order` ;

CREATE TABLE IF NOT EXISTS `phone_db`.`product_order` (
  `order_number` INT NOT NULL,
  `Product_id_products` INT NOT NULL,
  `quantity` INT NULL DEFAULT NULL,
  `id_product_order` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id_product_order`),
  UNIQUE INDEX `id_product_order_UNIQUE` (`id_product_order` ASC) VISIBLE,
  INDEX `fk_Product_Order_Order1` (`order_number` ASC) VISIBLE,
  INDEX `fk_Product_Order_Product1` (`Product_id_products` ASC) VISIBLE,
  CONSTRAINT `fk_Product_Order_Order1`
    FOREIGN KEY (`order_number`)
    REFERENCES `phone_db`.`order` (`order_number`),
  CONSTRAINT `fk_Product_Order_Product1`
    FOREIGN KEY (`Product_id_products`)
    REFERENCES `phone_db`.`product` (`id_products`))
ENGINE = InnoDB
AUTO_INCREMENT = 1
DEFAULT CHARACTER SET = utf8;

USE `phone_db` ;

-- -----------------------------------------------------
-- Placeholder table for view `phone_db`.`customer_history`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `phone_db`.`customer_history` (`email` INT, `order_number` INT, `order_date` INT, `order_total` INT, `id_customer` INT, `quantity_order` INT);

-- -----------------------------------------------------
-- procedure CreateComment
-- -----------------------------------------------------

USE `phone_db`;
DROP procedure IF EXISTS `phone_db`.`CreateComment`;

DELIMITER $$
USE `phone_db`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `CreateComment`(
	IN bodyIn TEXT,
    IN createdIn DATE,
    IN titleIn VARCHAR(250),
    IN ratingIn INT,
    IN product_idIn INT,
	IN userNameIn VARCHAR(255)
)
BEGIN 
	DECLARE reviewer INT DEFAULT -1;
    SELECT id_reveiwer INTO reviewer FROM phone_db.reveiwer WHERE username = userNameIn LIMIT 1;
    IF reviewer < 0 THEN
		INSERT INTO phone_db.reveiwer(username) VALUES (userNameIn);
        SELECT LAST_INSERT_ID() INTO reviewer;
	END IF;
    
    INSERT INTO phone_db.comment(body, created, title, rating, product_id, reviewer_id) 
    VALUES(bodyIn, createdIn, titleIn, ratingIn, product_idIn, reviewer);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- View `phone_db`.`customer_history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `phone_db`.`customer_history`;
DROP VIEW IF EXISTS `phone_db`.`customer_history` ;
USE `phone_db`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `phone_db`.`customer_history` AS select `customers`.`email` AS `email`,`phone_db`.`order`.`order_number` AS `order_number`,`phone_db`.`order`.`order_date` AS `order_date`,`phone_db`.`order`.`order_total` AS `order_total`,`customers`.`id_customer` AS `id_customer`,`quantities`.`quantity_order` AS `quantity_order` from (((select `phone_db`.`customer`.`id_customer` AS `id_customer`,`phone_db`.`customer`.`email` AS `email` from `phone_db`.`customer`) `customers` left join `phone_db`.`order` on((`customers`.`id_customer` = `phone_db`.`order`.`Customer_id_customer`))) left join (select sum(`phone_db`.`product_order`.`quantity`) AS `quantity_order`,`phone_db`.`product_order`.`order_number` AS `order_number` from `phone_db`.`product_order` group by `phone_db`.`product_order`.`order_number`) `quantities` on((`quantities`.`order_number` = `phone_db`.`order`.`order_number`)));

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
